package co.chatsdk.core.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import co.chatsdk.core.dao.BLinkedAccount;
import co.chatsdk.core.dao.BMessage;
import co.chatsdk.core.dao.BThread;
import co.chatsdk.core.dao.BUser;
import co.chatsdk.core.dao.ContactLink;
import co.chatsdk.core.dao.FollowerLink;
import co.chatsdk.core.dao.UserThreadLink;

import co.chatsdk.core.dao.BLinkedAccountDao;
import co.chatsdk.core.dao.BMessageDao;
import co.chatsdk.core.dao.BThreadDao;
import co.chatsdk.core.dao.BUserDao;
import co.chatsdk.core.dao.ContactLinkDao;
import co.chatsdk.core.dao.FollowerLinkDao;
import co.chatsdk.core.dao.UserThreadLinkDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bLinkedAccountDaoConfig;
    private final DaoConfig bMessageDaoConfig;
    private final DaoConfig bThreadDaoConfig;
    private final DaoConfig bUserDaoConfig;
    private final DaoConfig contactLinkDaoConfig;
    private final DaoConfig followerLinkDaoConfig;
    private final DaoConfig userThreadLinkDaoConfig;

    private final BLinkedAccountDao bLinkedAccountDao;
    private final BMessageDao bMessageDao;
    private final BThreadDao bThreadDao;
    private final BUserDao bUserDao;
    private final ContactLinkDao contactLinkDao;
    private final FollowerLinkDao followerLinkDao;
    private final UserThreadLinkDao userThreadLinkDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bLinkedAccountDaoConfig = daoConfigMap.get(BLinkedAccountDao.class).clone();
        bLinkedAccountDaoConfig.initIdentityScope(type);

        bMessageDaoConfig = daoConfigMap.get(BMessageDao.class).clone();
        bMessageDaoConfig.initIdentityScope(type);

        bThreadDaoConfig = daoConfigMap.get(BThreadDao.class).clone();
        bThreadDaoConfig.initIdentityScope(type);

        bUserDaoConfig = daoConfigMap.get(BUserDao.class).clone();
        bUserDaoConfig.initIdentityScope(type);

        contactLinkDaoConfig = daoConfigMap.get(ContactLinkDao.class).clone();
        contactLinkDaoConfig.initIdentityScope(type);

        followerLinkDaoConfig = daoConfigMap.get(FollowerLinkDao.class).clone();
        followerLinkDaoConfig.initIdentityScope(type);

        userThreadLinkDaoConfig = daoConfigMap.get(UserThreadLinkDao.class).clone();
        userThreadLinkDaoConfig.initIdentityScope(type);

        bLinkedAccountDao = new BLinkedAccountDao(bLinkedAccountDaoConfig, this);
        bMessageDao = new BMessageDao(bMessageDaoConfig, this);
        bThreadDao = new BThreadDao(bThreadDaoConfig, this);
        bUserDao = new BUserDao(bUserDaoConfig, this);
        contactLinkDao = new ContactLinkDao(contactLinkDaoConfig, this);
        followerLinkDao = new FollowerLinkDao(followerLinkDaoConfig, this);
        userThreadLinkDao = new UserThreadLinkDao(userThreadLinkDaoConfig, this);

        registerDao(BLinkedAccount.class, bLinkedAccountDao);
        registerDao(BMessage.class, bMessageDao);
        registerDao(BThread.class, bThreadDao);
        registerDao(BUser.class, bUserDao);
        registerDao(ContactLink.class, contactLinkDao);
        registerDao(FollowerLink.class, followerLinkDao);
        registerDao(UserThreadLink.class, userThreadLinkDao);
    }
    
    public void clear() {
        bLinkedAccountDaoConfig.clearIdentityScope();
        bMessageDaoConfig.clearIdentityScope();
        bThreadDaoConfig.clearIdentityScope();
        bUserDaoConfig.clearIdentityScope();
        contactLinkDaoConfig.clearIdentityScope();
        followerLinkDaoConfig.clearIdentityScope();
        userThreadLinkDaoConfig.clearIdentityScope();
    }

    public BLinkedAccountDao getBLinkedAccountDao() {
        return bLinkedAccountDao;
    }

    public BMessageDao getBMessageDao() {
        return bMessageDao;
    }

    public BThreadDao getBThreadDao() {
        return bThreadDao;
    }

    public BUserDao getBUserDao() {
        return bUserDao;
    }

    public ContactLinkDao getContactLinkDao() {
        return contactLinkDao;
    }

    public FollowerLinkDao getFollowerLinkDao() {
        return followerLinkDao;
    }

    public UserThreadLinkDao getUserThreadLinkDao() {
        return userThreadLinkDao;
    }

}
